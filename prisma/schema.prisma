generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  username       String    @unique
  hashedPassword String
  role           Role      @default(user)
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  requests       Request[]
}

enum Role {
  admin      @map("ADMIN")
  user       @map("USER")
  almoxarife @map("ALMOXARIFE")
}

model Unit {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  value     String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  products  Product[]
}

model Product {
  id               String           @id @default(auto()) @map("_id") @db.ObjectId
  name             String
  unit             Unit             @relation(fields: [unitId], references: [id])
  unitId           String           @db.ObjectId
  createdAt        DateTime         @default(now())
  updatedAt        DateTime         @updatedAt
  requestsProducts RequestProduct[]
}

model Request {
  id               String           @id @default(auto()) @map("_id") @db.ObjectId
  name             String
  createdAt        DateTime         @default(now())
  updatedAt        DateTime         @updatedAt
  userId           String           @db.ObjectId
  user             User             @relation(fields: [userId], references: [id])
  requestsProducts RequestProduct[]
}

model RequestProduct {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  requestId String   @db.ObjectId
  request   Request  @relation(fields: [requestId], references: [id])
  productId String   @db.ObjectId
  product   Product  @relation(fields: [productId], references: [id])
  quantity  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
